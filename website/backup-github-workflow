name: 'build'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PAT: ${{ secrets.PAT }}
    steps:
      - name: "Build:checkout"
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: edyprasetyo
          password: ${{ secrets.PAT }}

      
      # - name: Cypress run
      #   uses: cypress-io/github-action@v2
      #   with:
      #     # Specify Browser since container image is compile with Firefox
      #     browser: firefox

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
          cd /usr/local/src/portfolio-nextjs
          docker build portfolio-nextjs
          docker-compose up --no-deps -d portfolio-nextjs
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/edyprasetyo/portfolio-nextjs:latest




name: 'build'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - name: "Build:checkout"
        uses: actions/checkout@v2

      - name : "test cypress"
        run  : |
          npm i
          npm run test

      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY  }}
            HOSTNAME : ${{ secrets.HOST_DNS  }}
            USER_NAME : ${{ secrets.USERNAME  }}            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
                    
            #Now we have got the access of EC2 and we will start the deploy .
            cd /usr/local/src/portfolio-nextjs &&
            git checkout main &&
            git fetch --all &&
            git reset --hard origin/main &&
            git pull origin main &&
            docker-compose -f docker-compose.yml up -d --build 
          '
